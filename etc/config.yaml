---
settings:
  ansible:
    paths:
      basedir: provisioners/ansible
      cfg: ansible.cfg
    surrogate: devel-ansible01
    vardir: ".vagrant/machines/%s/provisioners/ansible"
    default_include_statement: 'import_playbook'
    windows_helper_script: scripts/windows.ansible-playbook.sh
  environment:
    context_file: .vagrant/.environment_context
    context: <%= File.read('.vagrant/.environment_context') if File.exist?('.vagrant/.environment_context') rescue '' %>
    node:
      definitions:
        exclude_paths: 
          - playbooks
          - templates
          - group_vars
          - host_vars
          - templates
          - files
        include_files: .*.\.yaml
        exclude_files:
          - inventory.yaml
          - inventory.yml
    basedir: environments
    nodesdir: machines
    skeleton:
      - group_vars/all
      - host_vars
      - machines
      - templates
    sizing:
      small:
        memory: 512
        vcpu: 1
      medium:
        memory: 1024
        vcpu: 1
      large:    
        memory: 2048
        vcpu: 2
      xlarge:    
        memory: 4096
        vcpu: 4
  logging:
    debug: true
    logs_dir: ".vagrant/var/log"
  managed_nodes:
    required_keys:
      - ssh
  # misc
  misc:
    patterns:
      node:
        up: ".*(running|reachable)"
  # Platform detection
  platform:
    is_windows: <%= (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil %>
    is_osx: <%= (/darwin/ =~ RUBY_PLATFORM) != nil %>
    is_linux: <%= (/linux/ =~ RUBY_PLATFORM) != nil %>
  project:
    editor: 
      path: "C:\\progra~1\\SUBLIM~1\\subl.exe"
      options: "-a"
    ssh:
      path: "C:\\Users\\etejeda\\Desktop\\tools\\c\\cmder\\vendor\\git-for-windows\\usr\\bin\\ssh.exe"
    is_vagrant: "<%= defined?(%{Vagrant}) ? :'true' : :'false' %>"
    project_path: "<%= File.expand_path('.', Dir.pwd) %>"
    requirements:
      plugins:
        mandatory:
          - vagrant-hosts # Manages static DNS on vagrant guests
        libvirt:
          - vagrant-hostsupdater # Adds an entry to your /etc/hosts file on the host system
          - vagrant-google # Google Cloud Platform Provider - for managing GCP Compute Instances
          - vagrant-libvirt
        virtualbox:
          - vagrant-disksize
          - vagrant-google
          - vagrant-hostsupdater
          - vagrant-vbguest
  puppet:
    basedir: provisioners/puppet
  starttime: "<%= Time.now %>"
  testing:
    ternary: "<%= defined?(%{somevar}) ? :'ternary - true' : :'ternary - false' %>  "
  user:
    homedir: "<%= File.expand_path('~') %>"
    name: "<%= ENV['USER'] || ENV['USERNAME'] %>"
  vagrant:
    api_version: 2
    require_version: ">= 1.7.2"
    commands:
      adhoc: 
        files: lib/commands/*.rb
    defaults:
      nodes:
        keys:
          box: 'ubuntu/xenial64'
          desktop: false
          provision: true
        size: medium
    default_provider: 'virtualbox'
    templates:
      node: etc/templates/node.yaml
    provider_order: 
      - 'libvirt'
      - 'virtualbox'
    is_true: true
    box_download_insecure: true
    ssh:
      private_key_path:
        - 'etc/sshkeys/vagrantkey'
      insert_key: false
      username: vagrant
    no_mount_vagrant: false
    # disable nfs for windows vhosts (for now)
    # see https://github.com/winnfsd/vagrant-winnfsd/issues/53
    use_nfs: false
    nfs_mount_options: 
      - rw
      - nolock
      - vers=3
      - udp
      - noatime
      - actimeo=1
    vm_network_default_mode: 'private_network'
    vm_usable_port_range_start: 2200
    vm_usable_port_range_end: 10000
    local_data_dir: "<%= defined?(%{Vagrant}) ? :"#{Vagrant::Environment::DEFAULT_LOCAL_DATA}" : :".vagrant" %>"
    basedir:
      posix: '.'
      windows: '/vagrant'
    vcpu_minimum: 1
    vmem_minimum: 512
    vcpu_allocation_ratio: 1
    vmem_allocation_ratio: 1