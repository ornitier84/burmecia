---
definitions:
  commands:
    node:
      name: node
      synopsis: calls vagrant commands against specified node
      execute: |
        node = VenvEnvironment::Nodes.new
        ARGV.each_with_index do |a, index|
          @node_name = ARGV[index + 1] if ['--name','-n'].include?(a)
          @node_size = ARGV[index + 1] if ['--size','-s'].include?(a)
          @node_environment = ARGV[index + 1] if ['--environment','-e'].include?(a)
          @node_group = ARGV[index + 1] if ['--group','-g'].include?(a)
          @node_box = ARGV[index + 1] if ['--box','-b'].include?(a)
        end
        if ![@node_name, @node_group, 
        @node_environment, @node_box].all?
          $logger.info($info.commands.node.usage)
          exit
        else
          node.create(@node_name, @node_group, 
          @node_environment, @node_box, @node_size)
          exit
        end
    group:
      name: group
      synopsis: call vagrant commands against specified node groups
      execute: |
        $no_provision = false
        group = VenvEnvironment::Groups.new
        ARGV.each_with_index do |a, index|
          $no_provision = true if ['--no-provision','-v'].include?(a)
          $node_group = ARGV[index + 1] if a == 'up'
          @group_name = ARGV[index + 1] if ['--name','-n'].include?(a)
          @group_environment = ARGV[index + 1] if ['--environment','-e'].include?(a)
        end
        if ![@group_name, @group_environment].all?
          $logger.info($info.commands.group.usage)
          exit
        else
          node.create(@node_name, @node_group, 
          @node_environment, @node_box, @node_size)
          exit
        end            
        group.create(@group_name, @group_environment)
    edit:
      name: edit
      synopsis: Calls your preferred text editor for modifying project files
      execute: |
        if ARGV[-1] == "playbook"
          machine = ARGV[-2]
          file_obj = "./#{$vagrant.local_data_dir}/machines/#{machine}/provisioners/ansible/dynamic_playbook.yaml"
        else
          file_obj = ARGV[-1]
        end
        Vagrant::Util::Subprocess.execute($project.editor.path, $project.editor.options, file_obj)
    environment:
      name: environment
      synopsis: Specifies environment context for vagrant operations
      execute: |
        $environment_context = "all";
        $environment_context = ARGV[-1] if ["status", "activate"].any? { |arg| ARGV[-1] != arg }
    inventory:
      name: inventory
      synopsis: Sets environment context for writing inventory yaml file relevant to specified environment(s)
      execute: |
        $environment_context = "all";
        $environment_context = ARGV[-1] if ["status", "activate"].any? { |arg| ARGV[-1] != arg }
    managed:
      name: managed
      synopsis: Sets managed boolean to true
      execute: |
        $managed = true
    kvm:
      name: kvm 
      synopsis: Sets kvm boolean to true
      execute: |
        $kvm= true
    debug:
      name: debug
      synopsis: Sets debug boolean to true
      execute: |
        $debug = true
    testing:
      name: testing
      synopsis: Just a command to test anything really
      execute: |
        $testing = true
