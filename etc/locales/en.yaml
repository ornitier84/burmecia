---
strings:
#-------------------------------------------------------------------------------
# Translations for exception classes
#-------------------------------------------------------------------------------
  info:
    boot:
      up: |-
        Bringing up %s
    boot_destroy: |-
      Destroying %s!
    boot_halt: |-
      Halting %s!
    boot_completed: |-
      Machine booted and ready!
    commands:
      node:
        create: |-
          Writing node definition file %s
    completion:
      done: |-
        Done!
    environment:
      activate: |-
        Activating vagrant environment %s
        Environment context file is %s.
    generic:
      message: |-
        Generic Message: %s
    group:
      up: |-
        Bringing up node group %s
    inventory:
      file:
        write: |-
          Writing inventory file %s
    managed:
      provisioners:
        ansible:
          invoke: |-
            Running ansible via %s
      status:
        header: |
          Current machine states:
          
    no_provisioners: |-
      No provisioners specified in node yaml for host %s
    provisioners:
      hosts: |-
        Adding %s %s to /etc/hosts on machine %s
      local:
        inline: |-
          Running local command: %s
        w_args: |-
          Running local script %s with args %s
        ok: |-
          Local command execution was successful, output was: %s
      ansible:
        controller: |-
          Ansible provisioner is in 'controller' mode. 
          Running ansible actions from %{ansible_surrogate}
          Machine targets: 
          %{machines}
    singleton:
      ssh:
        command: |-
          Running ssh process as follows: %s
        ok: |-
          Remote ssh command execution was successful, output was: %s
    time:
      elapsed: |-
        vagrant command took %s seconds to complete
  warnings:
    context:
      nodes:
        empty: |-
          Node set is empty. Make sure you have defined your nodes correctly,
          and that you are treating managed nodes accordingly.
          This is why you are most likely seeing only the default vagrant status.
    missing_plugin: |-
      You are missing at least one required vagrant plugin, install with:
    missing_plugin_install: |-
      rake init or vagrant plugin install %s
    provisioners:
      ansible:
        controller:
          nodes:
            not_created: |-
              Ansible provisioner is in 'controller' mode and the node %{machine} is not yet created.
              As such, I am skipping the ansible provisionment step.
              Once it has been created, please run the provisionment action manually:
              vagrant provision %{machine}
      fso:
        not_found: |-
          The file object was not found: %s
    synced_folder_not_found: |-
      Could not find path %s, skipping synced folder
    definition:
      skipped: |-
        Some node definitions were skipped!
        Run `vagrant debug status` to see why
      skipping:
        Skipping node definition %s due to condition - %s
      provisioners:
        malformed: |-
          The provisioners yaml structure for %s does not match type Hash
          Consult the node definition sample for proper syntax
          Skipping this entry ...
    libvirt_windows_os: |-
      Detected non-Windows Host OS
      Make sure you specify the proper hypervisor key:
        key hypervisor: 'libvirt' 
  errors:
    commands:
      ad_hoc:
        synopsis: |-
          The first line in ad-hoc command file must begin with an octothorp (#) and contain the command synopsis!
          Skipping %s
    debug:
      nopry: |-
        I couldn't import the 'pry' modules for debugging
        If these are not installed, try installing with:
          vagrant plugin install rb-readline
          vagrant plugin install pry-rescue
          vagrant plugin install pry-byebug
          vagrant plugin install pry-stack_explorer
    fso:
      operations:
        failure: |-
          There was a general failure in the attempt of this filesystem operation
          Error was: %s
    group:
      not_found: |-
        The specified group '%s' was not found in your environment
    inventory:
      file:
        error: |-
          Error in writing inventory file
          Error: %s
          Excerpt from backtrace: %s
      path:
        notfound: |-
          The environment you specified has no environment directory: %s
    environment:
      config: |-
        There was an error in parsing the specified environment config %s
        Error was %s
      path:
        notfound: |-
          The environment path you specified (%s) was not found.
          Because of this failure in node definitions, 
          Your nodes will not be listed and available for interaction.
          Review the contents of the environment the environment context file: $environment.context_file
          Activate an existing environment to clear this error, e.g.
          vagrant activate contoso
    definition:
      yaml_syntax: |-
        %s fails yaml syntax check
      nobox: |-
        You didn't speficy a vagrant box in node definition %s
        Which either means you intend for the node to be of managed node type or
        you simply forgot to include a box specification.
        Consult the 'Usage' section in the README or review the node definition template 
        Under the 'examples' directory
    machine:
      provider:
        syntax: |-
          Encountered an error during initialization of provider options, error was %s
    managed:
      not_reachable: |-
        The specified managed node is not reachable and/or not accepting requests for management: %s
        Perhaps the node is not powered on?
      checks_fail: |-
        The vagrant deployment for managed node %s will fail, 
        as it does not pass all requisite preflight checks 
      ssh_privatekey_notfound: |-
        Skipping managed node %s, 
        as I could not find the ssh private key being referenced %s
      missingkey: |-
        The node definition for %s is missing the following key(s):
      missingkeys: |-
         - %s        
    provisioners:
      local:
        failed: |-
          Local command execution failed with error: %s
      ansible:
        controller:
          args:
            unsupported: |-
              Ansible provisioner is in 'controller' mode.
              You must call the provision action ensuring the ansible surrogate hostname
              is specified first, as with:
              vagrant provision %{surrogate} %{machine}
              Skipping ansible provisionment
        surrogate:
          not_reachable: |-
            Windows platform detected. 
            As such, the project configuration designates a surrogate through which ansible is to be invoked.
            However, this host is not available, not reachable, and/or not accepting requests for interaction: %{machine}
            If the machine is not powered on or created, try running `vagrant up %{machine}`
    res: |-
      Could not reliably determine the hardware spec: %s
    singleton:
      ssh:
        failed: |-
          Remote ssh command execution failed with error: %s    
    exec: |-
      Something went wrong in executing the command you specified: %s
    generic: |-
      Something went terribly wrong
      Try calling the the same command, but this time, precede it with the 'debug' keyword
    loaderror: |-
      There was a problem loading at least one required library
      You may experience unexpected results!
      Error was: %s
      For the full backtrace, set the debug option in config.yaml to 'true'
    unhandled: |-
      I encountered an unhandled exception
      Error: %s
      Excerpt from backtrace: %s
      Try enabling debugging via
      vagrant option debug on
