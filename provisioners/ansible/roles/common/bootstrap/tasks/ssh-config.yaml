- name: ssh | ensure .ssh directory exists
  file:
    path: "/home/{{ item }}/.ssh"
    state: directory
    owner: "{{ item }}"
    group: "{{ item }}" 
    mode: 0700
  with_items: "{{ sshusers }}"

- name: ssh | stat ssh key files
  find:
    paths: /home/{{ item }}/.ssh
    patterns: 'id_rsa.*'
    use_regex: true
  register: ssh_keys_matched
  with_items:
    - "{{ sshusers }}"

- name: ssh | ensure proper ssh key file permissions
  file: 
    path: "{{ ssh_obj[1].files[0].path }}"
    owner: "{{ ssh_obj[0] }}"
    group: "{{ ssh_obj[0] }}" 
    mode: 0400    
  with_nested:
    - "{{ sshusers }}"
    - "{{ ssh_keys_matched.results }}"
  loop_control:
    loop_var: ssh_obj

- name: ssh | stat public ssh key files
  find:
    paths: "{{ vagrant_basedir }}/{{ environment_basedir }}/{{ environment_context }}/templates/home/{{ item }}/.ssh"  
    patterns: '.*pub$'
    use_regex: true
  register: pub_ssh_keys_matched
  with_items:
    - "{{ sshusers }}"          

- name: ssh | config | populate authorized keys
  authorized_key:
    user: "{{ ssh_obj[0] }}"
    state: present
    manage_dir: no
    key: "{{ lookup('file', '{{ ssh_obj[1].files[0].path }}') }}"
  with_nested: 
    - "{{ sshusers }}"
    - "{{ pub_ssh_keys_matched.results }}"
  loop_control:
    loop_var: ssh_obj      
  when: ssh_obj[1].matched > 0

- name: sshd configuration file update
  template: 
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    backup: yes
    owner: 0
    group: 0
    mode: 0644
    validate: '/usr/sbin/sshd -T -f %s'
  notify:
    - debian.restart_ssh    
    - rhel.restart_ssh   